@use 'sass:map';

@import url('https://fonts.googleapis.com/css2?family=Rubik&display=swap');

/* Breakpoints definition following the logic of min-width */
$breakpoints: (
  mobile: (
    min: 320px,
    max: 767px,
  ),
  tablet: (
    min: 768px,
    max: 1279px,
  ),
  laptop: (
    min: 1280px,
    max: 1919px,
  ),
  desktop: (
    min: 1920px,
    max: null,
  ),
);

@mixin respond-to($device, $orientation: null) {
  @if map.has-key($breakpoints, $device) {
    $device-data: map.get($breakpoints, $device);
    $min: map.get($device-data, min);
    $max: map.get($device-data, max);

    @if $orientation {
      /* With orientation parameter - ensures specific device + orientation combination */
      @if $orientation == landscape {
        @if $max {
          @media only screen and (min-width: $min + 200px) and (max-width: $max + 200px) and (orientation: $orientation) {
            @content;
          }
        }

 @else {
          @media only screen and (min-width: $min + 200px) and (orientation: $orientation) {
            @content;
          }
        }
      }

 @else {
        /* Portrait or other orientations remain unchanged */
        @if $max {
          @media only screen and (min-width: $min) and (max-width: $max) and (orientation: $orientation) {
            @content;
          }
        }

 @else {
          @media only screen and (min-width: $min) and (orientation: $orientation) {
            @content;
          }
        }
      }
    }

 @else {
      /* Without orientation parameter - applies to the device regardless of orientation */
      @if $max {
        @media only screen and (min-width: $min) and (max-width: $max) {
          @content;
        }
      }

 @else {
        @media only screen and (min-width: $min) {
          @content;
        }
      }
    }
  }

 @else {
    @error "Unknown device '#{$device}'.";
  }
}

.footer {
  display: flex;
  position: absolute;
  justify-content: center;
  align-items: center;
  width: 100%;
  background: black;
  bottom: 0;
  z-index: 10;

  .copyright-text {
    color: white;
    font-family: Rubik, sans-serif;
  }

  @include respond-to('mobile', 'portrait') {
    height: 5vh;

    .copyright-text {
      font-size: 1.5vh;
    }
  }

  @include respond-to('mobile', 'landscape') {
    height: 5vh;

    .copyright-text {
      font-size: 2.6vh;
    }
  }

  @include respond-to('tablet', 'portrait') {
    height: 4vh;

    .copyright-text {
      font-size: 1.5vh;
    }
  }

  @include respond-to('tablet', 'landscape') {
    height: 4vh;

    .copyright-text {
      font-size: 1.5vh;
    }
  }

  @include respond-to('laptop', 'landscape') {
    height: 4vh;

    .copyright-text {
      font-size: 1.5vh;
    }
  }

  @include respond-to('desktop', 'landscape') {
    height: 4vh;

    .copyright-text {
      font-size: 1.5vh;
    }
  }
}
